// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProyectoWeb.Models;
using System;

namespace ProyectoWeb.Migrations
{
    [DbContext(typeof(ModeloContext))]
    [Migration("20180304071444_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("ProyectoWeb.Models.Clientes", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CedulaJuridica");

                    b.Property<string>("DireccionFisica");

                    b.Property<string>("Nombre");

                    b.Property<int>("NúmerodeTelefono");

                    b.Property<string>("PaginaWeb");

                    b.Property<string>("Sector");

                    b.HasKey("ID");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("ProyectoWeb.Models.Contactos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<int>("ClienteID");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Puesto");

                    b.Property<int>("Telefono");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.ToTable("contacto");
                });

            modelBuilder.Entity("ProyectoWeb.Models.Reuniones", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("TituloDeLaReunion");

                    b.Property<string>("UsuarioAsignado");

                    b.Property<int>("UsuarioID");

                    b.Property<bool>("Virtual");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("reunion");
                });

            modelBuilder.Entity("ProyectoWeb.Models.Support", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteID");

                    b.Property<string>("DetalleDelProblema");

                    b.Property<string>("EstadoActual");

                    b.Property<string>("QuienReporto");

                    b.Property<string>("Titulo");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.ToTable("soporte");
                });

            modelBuilder.Entity("ProyectoWeb.Models.Usuarios", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("NicName");

                    b.Property<string>("Nombre");

                    b.Property<string>("Password");

                    b.Property<string>("TipoUsuario");

                    b.HasKey("ID");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("ProyectoWeb.Models.Contactos", b =>
                {
                    b.HasOne("ProyectoWeb.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoWeb.Models.Reuniones", b =>
                {
                    b.HasOne("ProyectoWeb.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProyectoWeb.Models.Support", b =>
                {
                    b.HasOne("ProyectoWeb.Models.Clientes", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
